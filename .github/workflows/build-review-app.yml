name: build-review-app
on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches:
      - '*'
      - '!master'

jobs:
  connect-vpn-build-qa:
    name: install ubuntu
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@master

    - name: Install Open VPN
      run: sudo apt install openvpn -y && sudo apt install expect

    - name: Connect VPN
      uses: golfzaptw/action-connect-ovpn@master
      id: connect_vpn
      with:
        PING_URL: '127.0.0.1'
        FILE_OVPN: '.github/vpn/config.ovpn'
        SECRET: ${{ secrets.SECRET_USERNAME_PASSWORD }}
      env:
        CA_CRT: ${{ secrets.CA_CRT}}
        USER_CRT: ${{ secrets.USER_CRT }}
        USER_KEY: ${{ secrets.USER_KEY }}
          
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.QA_ENDPOINT }}
        username: ${{ secrets.QA_USER }}
        password: ${{ secrets.QA_PASSWORD }}
        script: |
          branchPath="deployed-${{ github.head_ref }}" &&
          branchPath=${branchPath//\//\-} &&
          echo "$branchPath" &&
          cd ${{ secrets.QA_FOLDER }} &&
          cd .. &&
          git clone -b ${{ github.head_ref }} --single-branch ${{ secrets.URL_REPO }} $branchPath &&
          cd $branchPath &&
          cp ${{ secrets.QA_FOLDER }}/.env .env &&

          search_1='http:\/\/10.153.144.218\/tramites-ciudadano' &&
          search_2='\/tramites-ciudadano' &&
          search_3='http:\/\/10.153.144.218\/ciudadano-tramites\/public' &&
          replace_1='http:\/\/10.153.144.218\/${branchPath}' &&
          replace_2='\/${branchPath}' &&
          replace_3='http:\/\/10.153.144.218\/${branchPath}\/public' &&

          sed -i "s/$search_1/$replace_1/gi" .env &&
          sed -i "s/$search_2/$replace_2/gi" .env &&
          sed -i "s/$search_3/$replace_3/gi" .env &&
          
          chown -R nginx storage &&
          chmod -R 777 storage &&
          composer install &&
          composer dump-autoload &&
          npm install &&
          npm run prod

    - name: kill vpn
      if: always()
      run: sudo killall openvpn